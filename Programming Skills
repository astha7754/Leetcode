1768. Merge Strings Alternately
class Solution {
    public String mergeAlternately(String word1, String word2) {
        StringBuilder merge = new StringBuilder();
        int i = 0, j = 0;
        int n1 = word1.length(), n2= word2.length();
        while(i<n1 && j<n2 ){
            merge.append(word1.charAt(i++));
            merge.append(word2.charAt(j++));
        }
        while(i<n1)
        {
            merge.append(word1.charAt(i++));
        }
        while(j<n2)
        {
            merge.append(word2.charAt(j++));
        }
        return merge.toString();
    }

}
-------------------------------------------------------------------------------------------------------------------------
389. Find the Difference
class Solution {
    public char findTheDifference(String s, String t) {
        char result = 0;
        for (char ch: s.toCharArray())
        {
            result^=ch;
        }
        for (char ch: t.toCharArray())
        {
            result^=ch;
        }
        return result;
    }
}
---------------------------------------------------------------------------------------------------------------------------------
28. Find the Index of the First Occurrence in a String
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
class Solution {
    public int strStr(String haystack, String needle) {
        int hLen= haystack.length();
        int nLen= needle.length();
        if(nLen==0) return 0;
        if(nLen>hLen) return -1;
        for(int i=0; i<=hLen - nLen; i++){
            int j=0;
            while(j<nLen && haystack.charAt(i+j)==needle.charAt(j)){
                j++;
            }
            if(j==nLen) return i;
        }
        return -1;
    }
}
